name: 'Docker Build and Push'
description: 'Build and push Docker images to registry'
author: 'labjp-xyz'

inputs:
  registry:
    description: 'Container registry URL'
    required: false
    default: 'ghcr.io'
  image-name:
    description: 'Image name (without registry)'
    required: true
  dockerfile:
    description: 'Path to Dockerfile'
    required: false
    default: './Dockerfile'
  context:
    description: 'Build context'
    required: false
    default: '.'
  platforms:
    description: 'Target platforms'
    required: false
    default: 'linux/amd64,linux/arm64'
  build-args:
    description: 'Build arguments'
    required: false
    default: ''
  registry-username:
    description: 'Registry username'
    required: true
  registry-password:
    description: 'Registry password'
    required: true

outputs:
  image:
    description: 'Full image reference'
    value: ${{ steps.build.outputs.image }}
  digest:
    description: 'Image digest'
    value: ${{ steps.build.outputs.digest }}
  version:
    description: 'Image version/tag'
    value: ${{ steps.meta.outputs.version }}

runs:
  using: "composite"
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry-username }}
        password: ${{ inputs.registry-password }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ inputs.registry }}/${{ inputs.image-name }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value={{date 'YYYYMMDD-HHmmss'}}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        platforms: ${{ inputs.platforms }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: ${{ inputs.build-args }}

    - name: Set outputs
      shell: bash
      run: |
        echo "image=${{ inputs.registry }}/${{ inputs.image-name }}:latest" >> $GITHUB_OUTPUT
        echo "âœ… Image built: ${{ inputs.registry }}/${{ inputs.image-name }}:latest"